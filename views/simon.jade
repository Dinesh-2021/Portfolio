//
   Created by Briana on 12/22/15.

//
   Created by Briana on 10/26/15.
doctype html
html
   head
      title= title
      include ./header.jade
      link(rel='stylesheet', href='/stylesheets/simon.css')
   block content
      body
        .container.text-center
           .row
              h1 Simon Game
           .row
              .hidden-xs.col-sm-3
              .col-xs-6.col-sm-3
                 h3 Current # of steps:
              .col-xs-6.col-sm-3
                 h3#currentLength 0
              .hidden-xs.col-sm-3
           .row
              .col-xs-4
                 #start.button Start
              .col-xs-4
                 #restart.button Restart
              .col-xs-4
                 #strict.button Enable Strict Mode
           br
           .row
              .col-xs-6.red.color Red
              .col-xs-6.blue.color Blue
           .row
              .col-xs-6.yellow.color Yellow
              .col-xs-6.green.color Green
           .row
        br
        br
        include ./footer.jade
   script.
      //computer starts with empty pattern
      var compArr = [];

      //user starts with empty pattern
      var userArr = [];

      var userError = false;

      var strict = false;

      function randomizer(){
      //function returns a random number 1-4
         var random = Math.floor((Math.random() * (5 - 1)) + 1);
         compArr.push(random);
      };

      function compPlayer(num){
         if (num === 1){
            Red();
         } else if (num === 2){
            Blue();
         } else if (num === 3){
            Yellow();
         } else if (num === 4){
            Green();
         };
      }

      var time = 1300;

      function timer(){
         if (compArr.length < 5){
            time = 1300;
         } else if ((compArr.length >= 5) &&
                 (compArr.length < 9)){
            time = 1000;
         } else if ((compArr.length >= 9) &&
                 (compArr.length < 13)){
            time = 800;
         } else if (compArr.length >= 13){
            time = 600;
         };
      };

      function Red(){
         //when called, this function will light up #red and play a designated sound
         var audio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound1.mp3');
         audio.play();

         timer();

         $(".red").toggleClass("redActive");
         setTimeout(function(){
            $(".red").toggleClass("redActive");
         }, time);
      };

      function Blue(){
         //when called, this function will light up #blue and play a designated sound
         var audio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound2.mp3');
         audio.play();

         timer();

         $(".blue").toggleClass("blueActive");
            setTimeout(function(){
            $(".blue").toggleClass("blueActive");
         }, time);
      };

      function Yellow(){
         //when called, this function will light up #yellow and play a designated sound
         var audio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound3.mp3');
         audio.play();

         timer();

         $(".yellow").toggleClass("yellowActive");
         setTimeout(function(){
            $(".yellow").toggleClass("yellowActive");
         }, time);
      };

      function Green(){
         //when called, this function will light up #green and play a designated sound
         var audio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound4.mp3');
         audio.play();

         timer();


         $(".green").toggleClass("greenActive");
         setTimeout(function(){
            $(".green").toggleClass("greenActive");
         }, time);
      };

      function sequencePlayer(){
         randomizer();
         var i = 1;
         compArr.forEach(function(entry){
            setTimeout(function(){
               compPlayer(entry);
            }, (1000 * i));
            i += 1;
         });
         userArr = [];
         $("#currentLength").html(compArr.length);
      };

      function redClick(){
         //color function will initiate
         Red();
         //that color's number will be added to userArr
         userArr.push(1);
      };

      function blueClick(){
         //color function will initiate
         Blue();
         //that color's number will be added to userArr
         userArr.push(2);
      };

      function yellowClick(){
         //color function will initiate
         Yellow();
         //that color's number will be added to userArr
         userArr.push(3);
      };

      function greenClick(){
         //color function will initiate
         Green();
         //that color's number will be added to userArr
         userArr.push(4);
      };

      function compare(){
         if (userArr.length === 20){
            if (compArr.join() === userArr.join()){
               setTimeout(function(){
                  alert("You've done it! You've won! Now...again!");
               }, 1000);
               compArr = [];
               userArr = [];
               sequencePlayer();
            }
         }
         if (compArr.length === userArr.length){
            if (compArr.join() === userArr.join()){
               sequencePlayer();
            } else {
               if (strict){
                  setTimeout(function(){
                     alert("You lost. Try again! Or don't.");
                  }, 1000);
                  userArr = [];
                  compArr = [];
                  userError = false;
                  sequencePlayer();
               } else {
                  setTimeout(function(){
                     alert("Whoops...let's try that again.");
                  }, 1000);
                  userArr = [];
                  userError = false;
                  compArr.forEach(function(entry) {
                     var i = 1;
                     compArr.forEach(function (entry) {
                        setTimeout(function () {
                           compPlayer(entry);
                        }, (1000 * i));
                        i += 1;
                     });
                  });
               };
            };
         }
      }

      $(document).ready(function(){
         $("#start").click(function(){
            sequencePlayer();
         });

         $(".red").click(function(){
            redClick();
            compare();
         });

         $(".blue").click(function(){
            blueClick();
            compare();
         });

         $(".yellow").click(function(){
            yellowClick();
            compare();
         });

         $(".green").click(function(){
            greenClick();
            compare();
         });

         $("#restart").click(function(){
            compArr = [];
            userArr = [];
            userError = false;
            sequencePlayer();
         });

         $("#strict").click(function(){
            if (strict === false){
               $("#strict").html("Disable Strict Mode");
               strict = true;
            } else {
               $("#strict").html("Enable Strict Mode");
               strict = false;
            }

         });

      });
